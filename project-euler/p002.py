from typing import List


def _fib(upper_limit: int) -> List[int]:
    i = 2
    fib_nums = [0, 1]

    while 1:
        nth_num = fib_nums[i - 2] + fib_nums[i - 1]
        if nth_num > upper_limit:
            break
        fib_nums.append(nth_num)

        i += 1

    return fib_nums[1:]


def compute(upper_limit: int = 4_000_000):
    """
    Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2,
    the first 10 terms will be:

    1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

    By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of
    the even-valued terms.
    """

    series = _fib(upper_limit)
    return sum([x for x in series if x % 2 == 0])
